[{"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/App.js":"1","/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/EditTagGroup.js":"2","/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/SearchInput.js":"3","/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/index.js":"4","/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/service.js":"5"},{"size":4066,"mtime":1610444554002,"results":"6","hashOfConfig":"7"},{"size":3728,"mtime":1610360955906,"results":"8","hashOfConfig":"7"},{"size":2665,"mtime":1610440428158,"results":"9","hashOfConfig":"7"},{"size":222,"mtime":1610085081145,"results":"10","hashOfConfig":"7"},{"size":1073,"mtime":1610440420408,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1y5oo0s",{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/App.js",["26","27","28"],"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/EditTagGroup.js",["29","30"],"import React, { useState, useRef,useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Tag, Input, Tooltip } from \"antd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport \"./EditTagGroup.css\";\n\nfunction EditableTagGroup(props) {\n  const {onChange} = props\n  const [state, setState] = useState({\n    tags: [],\n    inputVisible: false,\n    inputValue: \"\",\n    editInputIndex: -1,\n    editInputValue: \"\",\n  });\n\n  const inputRef = useRef(null);\n  const editInputRef = useRef(null);\n  useEffect(()=>{\n    if (inputRef.current != null ){\n      inputRef.current.focus();\n    }\n  },[state.inputVisible])\n\n  useEffect(()=>{\n    if (editInputRef.current != null ){\n      editInputRef.current.focus();\n    }\n  },[state.editInputIndex])\n\n  useEffect(()=>{\n    onChange(state.tags)\n  },[state.tags])\n\n  const handleClose = (removedTag) => {\n    const tags = state.tags.filter((tag) => tag !== removedTag);\n     \n    setState({ ...state, tags });\n  };\n\n  const showInput = () => {\n    setState({ ...state, inputVisible: true });\n   \n   \n  };\n\n  const handleInputChange = (e) => {\n    setState({ ...state, inputValue: e.target.value });\n  };\n\n  const handleInputConfirm = () => {\n    const { inputValue } = state;\n    let { tags } = state;\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      tags = [...tags, inputValue];\n    }\n   \n    setState({\n      ...state,\n      tags,\n      inputVisible: false,\n      inputValue: \"\",\n    });\n  };\n\n  const handleEditInputChange = (e) => {\n    setState({ ...state, editInputValue: e.target.value });\n  };\n\n  const handleEditInputConfirm = () => {\n    let { tags, editInputIndex, editInputValue } = state;\n    const newTags = [...tags];\n    newTags[editInputIndex] = editInputValue;\n    setState({\n      ...state,\n      tags: newTags,\n      editInputIndex: -1,\n      editInputValue: \"\",\n    });\n  };\n\n \n  const {\n    tags,\n    inputVisible,\n    inputValue,\n    editInputIndex,\n    editInputValue,\n  } = state;\n\n  return (\n    <>\n      {tags.map((tag, index) => {\n        if (editInputIndex === index) {\n          return (\n            <Input\n              ref={editInputRef}\n              key={tag}\n              size=\"small\"\n              className=\"tag-input\"\n              value={editInputValue}\n              onChange={handleEditInputChange}\n              onBlur={handleEditInputConfirm}\n              onPressEnter={handleEditInputConfirm}\n            />\n          );\n        }\n\n        const isLongTag = tag.length > 20;\n\n        const tagElem = (\n          <Tag\n            className=\"edit-tag\"\n            key={tag}\n            closable={true}\n            onClose={() => handleClose(tag)}\n          >\n            <span\n              onDoubleClick={(e) => {\n                setState({\n                  ...state,\n                  editInputIndex: index,\n                  editInputValue: tag,\n                });\n                e.preventDefault();\n              }}\n            >\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n            </span>\n          </Tag>\n        );\n        return isLongTag ? (\n          <Tooltip title={tag} key={tag}>\n            {tagElem}\n          </Tooltip>\n        ) : (\n          tagElem\n        );\n      })}\n      {inputVisible && (\n        <Input\n          ref={inputRef}\n          type=\"text\"\n          size=\"small\"\n          className=\"tag-input\"\n          value={inputValue}\n          onChange={handleInputChange}\n          onBlur={handleInputConfirm}\n          onPressEnter={handleInputConfirm}\n        />\n      )}\n      {!inputVisible && (\n        <Tag className=\"site-tag-plus\" onClick={showInput}>\n          <PlusOutlined /> 添加标签\n        </Tag>\n      )}\n    </>\n  );\n}\n\nexport default EditableTagGroup;\n",["31","32"],"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/SearchInput.js",["33","34","35","36"],"import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Select } from \"antd\";\nimport * as ls from \"local-storage\";\nimport { searchTopicRequest as searchRequest } from \"./service\";\nconst { Option, OptGroup } = Select;\nlet timeout;\nlet currentValue;\nconst MAX_LIMIT = 3;\nfunction searchTopic(value, callback) {\n  if (timeout) {\n    console.log(\"clearTimeout\");\n    clearTimeout(timeout);\n    timeout = null;\n  }\n  currentValue = value;\n\n  function search() {\n    searchRequest(value).then((d) => {\n      if (currentValue === value) {\n        const { data } = d;\n        const result = [];\n        data.forEach((r) => {\n          result.push({\n            value: r.id,\n            text: r.name,\n          });\n        });\n        callback(result);\n      }\n    });\n  }\n\n  timeout = setTimeout(search, 500);\n}\n\nfunction SearchInput(props) {\n  const { onChange } = props;\n  const [data, setData] = useState([]);\n  const [value, setValue] = useState();\n  const [used, setUsed] = useState([]);\n  const handleSearch = (value) => {\n    if (value) {\n      searchTopic(value, (data) => setData(data));\n    } else {\n      setData([]);\n    }\n  };\n\n  const handleChange = (val, option) => {\n    if (value == val) {\n      return;\n    }\n    setValue(val);\n    onChange(val);\n    let filted = used.filter((p) => p.value != val);\n    let newUsed = [{ value: val, text: option.children }, ...filted];\n    newUsed = newUsed.slice(0, MAX_LIMIT);\n    setUsed(newUsed);\n    ls.set(\"TOPIC_USED\", newUsed);\n  };\n\n  useEffect(() => {\n    let lsdata = ls.get(\"TOPIC_USED\");\n    console.log(\"init used\");\n    if (Array.isArray(lsdata)) {\n      if (lsdata.length > 0) {\n        setUsed(lsdata);\n        setValue(lsdata[0].value);\n        onChange(lsdata[0].value);\n      }\n      return;\n    }\n\n    //保存\n    return () => {\n      console.log(\"save used\");\n    };\n  }, []);\n\n  const options = data.map((d) => (\n    <Option key={\"u_\" + d.value} value={d.value}>\n      {d.text}\n    </Option>\n  ));\n  const usedOptions = used.map((d) => (\n    <Option key={\"s_\" + d.value} value={d.value}>\n      {d.text}\n    </Option>\n  ));\n  return (\n    <Select\n      showSearch\n      value={value}\n      placeholder={props.placeholder}\n      style={props.style}\n      defaultActiveFirstOption={false}\n      showArrow={false}\n      filterOption={false}\n      onSearch={handleSearch}\n      onChange={handleChange}\n      notFoundContent={null}\n    >\n      <OptGroup label=\"最近使用\" key=\"used\">\n        {usedOptions}\n      </OptGroup>\n      <OptGroup label=\"输入搜索\" key=\"search\">\n        {options}\n      </OptGroup>\n    </Select>\n  );\n}\n\nexport default SearchInput;\n",["37","38"],"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/index.js",[],"/Users/seven/Documents/github/link-chrome-extension/picker-extension/src/service.js",[],{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":57,"column":6,"nodeType":"45","endLine":57,"endColumn":8,"suggestions":"46"},{"ruleId":"47","severity":1,"message":"48","line":75,"column":23,"nodeType":"49","messageId":"50","endLine":75,"endColumn":25},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"43","severity":1,"message":"51","line":33,"column":5,"nodeType":"45","endLine":33,"endColumn":17,"suggestions":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"39","severity":1,"message":"40","line":2,"column":8,"nodeType":"41","messageId":"42","endLine":2,"endColumn":16},{"ruleId":"47","severity":1,"message":"48","line":51,"column":15,"nodeType":"49","messageId":"50","endLine":51,"endColumn":17},{"ruleId":"47","severity":1,"message":"57","line":56,"column":45,"nodeType":"49","messageId":"50","endLine":56,"endColumn":47},{"ruleId":"43","severity":1,"message":"51","line":79,"column":6,"nodeType":"45","endLine":79,"endColumn":8,"suggestions":"58"},{"ruleId":"53","replacedBy":"59"},{"ruleId":"55","replacedBy":"60"},"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'form'. Either include it or remove the dependency array.","ArrayExpression",["61"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array.",["62"],"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"Expected '!==' and instead saw '!='.",["65"],["63"],["64"],{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},"Update the dependencies array to be: [form]",{"range":"72","text":"73"},"Update the dependencies array to be: [onChange, state.tags]",{"range":"74","text":"75"},"Update the dependencies array to be: [onChange]",{"range":"76","text":"77"},[1393,1395],"[form]",[797,809],"[onChange, state.tags]",[1874,1876],"[onChange]"]